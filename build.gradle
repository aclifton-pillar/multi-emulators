/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
plugins {
    id "base"
}

description = 'A monstrous gradle build from another dimension'
version = '999.0'

def numberOfThings = 3
def startingEmulatorPort = 5554

task copy(type: Copy, group: "mobile", description: "Copies components to dest for no reason") {
    from "components"
    into "dest"
}

task startEmulators(type:Exec, group: "mobile") {
    def ports = (0..numberOfThings-1).collect { it * 2 + startingEmulatorPort }
    println(ports)
    workingDir '.'


    // 0. check if already running, run stopEmulators if so, or do nothing

    // 1. add devices with avdmanager
    ext.createDevices = { portsToAssign ->
        portsToAssign.each { port ->
            exec {
                commandLine 'echo', "port $port"
                commandLine 'avdmanager', 'create', 'avd', '--name', "test_$port", '--package', 'system-images;android-28;google_apis_playstore;x86', '--device', 'Nexus 5X'
            }
        }
    }

    // 2. Run startEmulators

    // 3. Target `react-native run-android' with appropriate emulator ids

    doFirst {
        createDevices(ports)
    }

    doLast {
        exec {
            commandLine 'avdmanager', 'list'
        }
    }
}

task stopEmulators(type:Exec, group: "mobile") {
    def ports = (0..numberOfThings-1).collect { it * 2 + startingEmulatorPort }
    // 1. get list of running startEmulators

    // 2. kill them all, with fire
    ext.deleteDevices = { portsToAssign ->
        portsToAssign.each { port ->
            exec {
                commandLine 'avdmanager', 'delete', 'avd', '--name', "test_$port"
            }
        }
    }

    doFirst {
        deleteDevices(ports)
    }
}
